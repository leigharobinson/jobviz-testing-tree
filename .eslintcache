[{"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/index.js":"1","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/JobViz.js":"2","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/images/PrupleDot.js":"3","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/ApplicationViews.js":"4","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/title/Title.js":"5","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/modules/JobManager.js":"6","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/table/Table.js":"7","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobs/Jobs.js":"8","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneList.js":"9","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesList.js":"10","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoList.js":"11","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneCard.js":"12","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesCard.js":"13","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/Helper.js":"14","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoCard.js":"15","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeList.js":"16","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeCard.js":"17"},{"size":572,"mtime":1607031059345,"results":"18","hashOfConfig":"19"},{"size":190,"mtime":1607028507207,"results":"20","hashOfConfig":"19"},{"size":660,"mtime":1606940842610,"results":"21","hashOfConfig":"19"},{"size":1755,"mtime":1607208843071,"results":"22","hashOfConfig":"19"},{"size":311,"mtime":1607193598843,"results":"23","hashOfConfig":"19"},{"size":235,"mtime":1607193598844,"results":"24","hashOfConfig":"19"},{"size":0,"mtime":1607193598843,"results":"25","hashOfConfig":"19"},{"size":645,"mtime":1607193598839,"results":"26","hashOfConfig":"19"},{"size":3612,"mtime":1607207123883,"results":"27","hashOfConfig":"19"},{"size":2917,"mtime":1607211963610,"results":"28","hashOfConfig":"19"},{"size":3824,"mtime":1607207123884,"results":"29","hashOfConfig":"19"},{"size":1692,"mtime":1607216182832,"results":"30","hashOfConfig":"19"},{"size":1698,"mtime":1607216227062,"results":"31","hashOfConfig":"19"},{"size":297,"mtime":1607207123880,"results":"32","hashOfConfig":"19"},{"size":1561,"mtime":1607217621468,"results":"33","hashOfConfig":"19"},{"size":4361,"mtime":1607217696862,"results":"34","hashOfConfig":"19"},{"size":946,"mtime":1607217765105,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1x6cskc",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/index.js",[],["74","75"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/JobViz.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/images/PrupleDot.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/ApplicationViews.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/title/Title.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/modules/JobManager.js",["76"],"const remoteURL = \"http://localhost:8088\";\n\nexport default {\n    getAll() {\n        return fetch(`${remoteURL}/jobs`).then((result) => result.json());\n      },\n    getLevel(param) {\n        return fetch(`${remoteURL}/${param}`)\n    }\n}","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/table/Table.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobs/Jobs.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneList.js",["77","78","79"],"import React, { useState, useEffect } from \"react\";\nimport JobManager from \"../../modules/JobManager\"\nimport {Title} from \"../title/Title\"\nimport \"../styling/Style.css\"\nimport {LevelOneCard} from \"./LevelOneCard\"\nimport {makeStringPath} from \"../Helper\"\n\nexport const LevelOneList = (props) => {\n    //All the objects in jobs array\n    const [jobs, setJobs] = useState([]);\n    //where we set the id of the category that was clicked to sate\n      const [levelTwoStr, setLevelTwoStr] = useState([]);\n    // the level 1 category url sting we need to pass to children\n    let levelOneUrl = props.category;\n    //the level 1 category 'normal' string we need to match to make sure \n    //we only select level 2 categories that have the same level 1 category\n    let levelOneString = makeStringPath(props.category);\n\n    useEffect(() => {\n        JobManager.getAll().then((jobs) => {\n            setJobs(jobs)\n        })\n    }, []);\n\n    //empty arry to push names of target level (Leve2)\n    let levelList = []\n    const filsterlevelTwo = () => jobs.map((jobCategory) => {\n        if (jobCategory.Level1 === levelOneString && jobCategory.Level2 !== \"NA\" && !levelList.includes(jobCategory.Level2)) {\n            levelList.push(jobCategory.Level2)\n        }\n    });\n\n   //call filter\n    filsterlevelTwo(); \n    //alphabitize sorted list to use when mapping array to DOM  \n    const alphaList = levelList.sort()\n    // console.log(\"LevelList\", LevelOneList)\n\n\n     //This get's the id of whatever category was clicked\n     const handleClick = (e) => {\n        e.preventDefault();\n        // console.log(e.target.id);\n        setLevelTwoStr(e.target.id)\n        }\n        //  console.log(levelTwoStr)\n\n\n    return (\n        <>\n            <div>\n                <Title />\n            </div>        \n            <div className=\"jobviz-parent\">    \n                <div>\n                    <h4>Level Two</h4>\n                </div>  \n            </div> \n            <div className=\"jobviz-parent\"> \n            \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div className=\"jobs-parent\">\n                    <div className=\"container-cards\">\n                        {alphaList.map((orderedCategory) => {\n                        return (\n                            <div key={orderedCategory} className=\"\" onClick={handleClick}> \n                                <LevelOneCard\n                                key={orderedCategory}\n                                orderedCategory={orderedCategory}\n                                jobs={jobs}\n                                levelOneUrl={levelOneUrl}\n                                {...props}\n                                />\n                            </div>\n                        )\n\n                        })}\n                    </div>\n                </div>\n            </div>        \n       </> \n    );\n\n    return (\n        <>\n\n        <div className=\"jobviz-parent\"> \n            \n            <h1>A Test to see if this component is hidden or shown</h1>\n            <h3>{levelOneString}</h3>\n        </div>\n        \n    </>\n\n\n    )\n   \n}\n\n\n","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesList.js",["80","81"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoList.js",["82","83"],"import React, { useState, useEffect } from \"react\";\nimport JobManager from \"../../modules/JobManager\"\nimport {Title} from \"../title/Title\"\nimport \"../styling/Style.css\"\nimport {LevelTwoCard} from \"./LevelTwoCard\"\nimport {makeStringPath} from \"../Helper\"\n\nexport const LevelTwoList = (props) => {\n    //All the objects in jobs array\n    const [jobs, setJobs] = useState([]);\n    //where we set the id of the category that was clicked to sate\n    const [levelThreeStr, setLevelThreeStr] = useState([]);\n    // the level 1 category url sting we need to pass to children\n    const levelOneUrl = props.levelOneUrl;\n    // the level 2 category url sting we need to pass to children\n    const levelTwoUrl = props.category;\n     //the level 2 category 'normal' string we need to match to make sure \n    //we only select level 3 categories that have the same level 1 category\n    let levelTwoString = makeStringPath(props.category);\n\n    useEffect(() => {\n        JobManager.getAll().then((jobs) => {\n            setJobs(jobs)\n        })\n    }, []);\n\n    //empty arry to push names of target level (Leve2)\n    let levelList = []\n    const filsterlevelThree = () => jobs.map((jobCategory) => {\n        if (jobCategory.Level2 === levelTwoString && jobCategory.Level3 !== \"NA\" && !levelList.includes(jobCategory.Level3)) {\n            levelList.push(jobCategory.Level3)\n        }\n    });\n\n    //call filter\n    filsterlevelThree();  \n     //alphabitize sorted list to use when mapping array to DOM  \n    const alphaList = levelList.sort();\n    // console.log(\"LevelList\", LevelOneList)\n\n     //This get's the id of whatever category was clicked\n     const handleClick = (e) => {\n        e.preventDefault();\n        // console.log(e.target.id);\n        setLevelThreeStr(e.target.id)\n        }\n        //  console.log(levelTwoStr)\n\n   return (\n        <>\n        <div>\n            <Title />\n        </div>\n        <div className=\"jobviz-parent\">    \n                <div>\n                    <h4>Level Three</h4>\n                </div>  \n            </div>  \n        <div className=\"jobviz-parent\"> \n        <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories\");\n                        // console.log(\"you clicked me\");\n                }}></div> \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(`/job-catagories/${levelOneUrl}`);\n                        // console.log(\"you clicked me\");\n                }}></div> \n       \n                    <div className=\"container-cards\">\n                        {alphaList.map((orderedCategory) => {\n                        return (\n                            <div key={orderedCategory} className=\"l2-color-border\" onClick={handleClick}> \n                                <LevelTwoCard\n                                    key={orderedCategory}\n                                    orderedCategory={orderedCategory}\n                                    jobs={jobs}\n                                    levelOneUrl={levelOneUrl}\n                                    levelTwoUrl={levelTwoUrl}\n                                    {...props}\n                                />\n                            </div>\n                        )\n\n                        })}\n                    </div>\n                </div>\n            \n    \n         \n        \n        \n        \n    </>\n)\n}","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneCard.js",["84","85","86"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesCard.js",["87","88","89","90"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/Helper.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoCard.js",["91","92","93"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeList.js",["94","95"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeCard.js",["96","97","98","99","100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":1,"nodeType":"108","endLine":19,"endColumn":2},{"ruleId":"109","severity":1,"message":"110","line":12,"column":14,"nodeType":"111","messageId":"112","endLine":12,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":27,"column":58,"nodeType":"115","messageId":"116","endLine":27,"endColumn":60},{"ruleId":"117","severity":1,"message":"118","line":95,"column":5,"nodeType":"119","messageId":"120","endLine":107,"endColumn":6},{"ruleId":"109","severity":1,"message":"121","line":12,"column":12,"nodeType":"111","messageId":"112","endLine":12,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":26,"column":57,"nodeType":"115","messageId":"116","endLine":26,"endColumn":59},{"ruleId":"109","severity":1,"message":"122","line":12,"column":12,"nodeType":"111","messageId":"112","endLine":12,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":29,"column":60,"nodeType":"115","messageId":"116","endLine":29,"endColumn":62},{"ruleId":"109","severity":1,"message":"123","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"125","line":16,"column":20,"nodeType":"115","messageId":"116","endLine":16,"endColumn":22},{"ruleId":"109","severity":1,"message":"123","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"126","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"125","line":18,"column":20,"nodeType":"115","messageId":"116","endLine":18,"endColumn":22},{"ruleId":"109","severity":1,"message":"123","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"125","line":16,"column":20,"nodeType":"115","messageId":"116","endLine":16,"endColumn":22},{"ruleId":"109","severity":1,"message":"127","line":12,"column":12,"nodeType":"111","messageId":"112","endLine":12,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":33,"column":59,"nodeType":"115","messageId":"116","endLine":33,"endColumn":61},{"ruleId":"109","severity":1,"message":"123","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"128","line":7,"column":7,"nodeType":"111","messageId":"112","endLine":7,"endColumn":18},{"ruleId":"109","severity":1,"message":"129","line":8,"column":7,"nodeType":"111","messageId":"112","endLine":8,"endColumn":18},{"ruleId":"109","severity":1,"message":"130","line":9,"column":7,"nodeType":"111","messageId":"112","endLine":9,"endColumn":20},{"ruleId":"109","severity":1,"message":"131","line":11,"column":7,"nodeType":"111","messageId":"112","endLine":11,"endColumn":15},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'levelTwoStr' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'levelOneStr' is assigned a value but never used.","'levelThreeStr' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","Array.prototype.filter() expects a return value from arrow function.","'Link' is defined but never used.","'levelFourStr' is assigned a value but never used.","'levelOneUrl' is assigned a value but never used.","'levelTwoUrl' is assigned a value but never used.","'levelThreeUrl' is assigned a value but never used.","'category' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]