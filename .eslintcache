[{"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/index.js":"1","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/JobViz.js":"2","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/images/PrupleDot.js":"3","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/ApplicationViews.js":"4","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/title/Title.js":"5","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/modules/JobManager.js":"6","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/table/Table.js":"7","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobs/Jobs.js":"8","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/ArtDesignWorkersL2.js":"9","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/Artists&RelatedWorkersL3.js":"10","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/JobCategoriesCardL2.js":"11","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/JobCategoriesCardL3.js":"12","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesList.js":"13","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneList.js":"14","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesCard.js":"15","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneCard.js":"16","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoList.js":"17","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/Helper.js":"18"},{"size":572,"mtime":1607031059345,"results":"19","hashOfConfig":"20"},{"size":190,"mtime":1607028507207,"results":"21","hashOfConfig":"20"},{"size":660,"mtime":1606940842610,"results":"22","hashOfConfig":"20"},{"size":1604,"mtime":1607202616908,"results":"23","hashOfConfig":"20"},{"size":311,"mtime":1607193598843,"results":"24","hashOfConfig":"20"},{"size":235,"mtime":1607193598844,"results":"25","hashOfConfig":"20"},{"size":0,"mtime":1607193598843,"results":"26","hashOfConfig":"20"},{"size":645,"mtime":1607193598839,"results":"27","hashOfConfig":"20"},{"size":2780,"mtime":1607193598841,"results":"28","hashOfConfig":"20"},{"size":3216,"mtime":1607193598842,"results":"29","hashOfConfig":"20"},{"size":982,"mtime":1607193598841,"results":"30","hashOfConfig":"20"},{"size":925,"mtime":1607193598842,"results":"31","hashOfConfig":"20"},{"size":2462,"mtime":1607202205765,"results":"32","hashOfConfig":"20"},{"size":2933,"mtime":1607200441131,"results":"33","hashOfConfig":"20"},{"size":997,"mtime":1607202424970,"results":"34","hashOfConfig":"20"},{"size":949,"mtime":1607201949268,"results":"35","hashOfConfig":"20"},{"size":551,"mtime":1607199954805,"results":"36","hashOfConfig":"20"},{"size":266,"mtime":1607201419282,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1x6cskc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/index.js",[],["84","85"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/JobViz.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/images/PrupleDot.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/ApplicationViews.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/title/Title.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/modules/JobManager.js",["86"],"const remoteURL = \"http://localhost:8088\";\n\nexport default {\n    getAll() {\n        return fetch(`${remoteURL}/jobs`).then((result) => result.json());\n      },\n    getLevel(param) {\n        return fetch(`${remoteURL}/${param}`)\n    }\n}","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/table/Table.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobs/Jobs.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/ArtDesignWorkersL2.js",["87"],"import React, { useState, useEffect } from \"react\";\nimport JobManager from \"../../modules/JobManager\"\nimport {Title} from \"../title/Title\"\nimport \"../styling/Style.css\"\nimport {JobCatagoriesCardL2} from \"./JobCategoriesCardL2\"\n// import {PurpleDot} from \"../../images/PrupleDot\"\n\nexport const ArtDesignWorkers = (props) => {\n    const [jobs, setJobs] = useState([]);\n    const LevelOne = \"arts,-design,-etc\"\n    const LevelTwo =\"art-&-design-workers\"\n    // let re = new RegExp('Architecture')\n    const GetJobCatagories = () => {\n        return JobManager.getAll().then((jobs) => {\n            setJobs(jobs)\n        })\n    }\n    useEffect(() => {\n        GetJobCatagories()\n    }, []);\n\n    let LevelOneList = []\n    const filterJobCatLevelONe = () => jobs.map((jobCategory) => {\n        if (jobCategory.Level2 === \"Art & design workers\" && jobCategory.Level3 !== \"NA\" && !LevelOneList.includes(jobCategory.Level3)) {\n            LevelOneList.push(jobCategory.Level3)\n        }\n    \n\n    })\n    filterJobCatLevelONe()  \n    const AlphaList = LevelOneList.sort()\n    console.log(\"LevelOneList\", LevelOneList.length)\n    return (\n        <>\n            <div>\n                <Title />\n            </div>        \n            <h1>woot level 2 Art</h1>\n            <div className=\"jobviz-parent\"> \n            \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories/arts,-design,-etc/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div className=\"jobs-parent\">\n                    <div className=\"container-cards\">\n                        {AlphaList.map((category) => (\n                        <JobCatagoriesCardL2\n                            key={category}\n                            category={category}\n                            jobs={jobs}\n                            LevelOne={LevelOne}\n                            LevelTwo={LevelTwo}\n                            {...props}\n                        />\n                        ))}\n                    </div>\n                </div>\n            </div>        \n       </> \n    );\n};","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/Artists&RelatedWorkersL3.js",["88"],"import React, { useState, useEffect } from \"react\";\nimport JobManager from \"../../modules/JobManager\"\nimport {Title} from \"../title/Title\"\nimport \"../styling/Style.css\"\nimport {JobCatagoriesCardL3} from \"./JobCategoriesCardL3\"\n// import {PurpleDot} from \"../../images/PrupleDot\"\n\nexport const ArtistsRelatedWorkers = (props) => {\n    const [jobs, setJobs] = useState([]);\n    const LevelOne = \"arts,-design,-etc\"\n    const LevelTwo = \"art-&-design-workers\"\n    const LevelThree= \"artists-&-related-workers\"\n    // let re = new RegExp('Architecture')\n    const GetJobCatagories = () => {\n        return JobManager.getAll().then((jobs) => {\n            setJobs(jobs)\n        })\n    }\n    useEffect(() => {\n        GetJobCatagories()\n    }, []);\n\n    let LevelOneList = []\n    const filterJobCatLevelONe = () => jobs.map((jobCategory) => {\n        if (jobCategory.Level3 === \"Artists & related workers\" && jobCategory.Level4 !== \"NA\" && !LevelOneList.includes(jobCategory.Level4)) {\n            LevelOneList.push(jobCategory.Level4)\n        }\n    \n\n    })\n    filterJobCatLevelONe()  \n    const AlphaList = LevelOneList.sort()\n    console.log(\"LevelOneList\", LevelOneList.length)\n    return (\n        <>\n            <div>\n                <Title />\n            </div>        \n            <h1>woot level 3 Art</h1>\n            <div className=\"jobviz-parent\"> \n            \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories/arts,-design,-etc/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories/arts,-design,-etc/art-&-design-workers/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div className=\"jobs-parent\">\n                    <div className=\"container-cards\">\n                        {AlphaList.map((category) => (\n                        <JobCatagoriesCardL3\n                            key={category}\n                            category={category}\n                            jobs={jobs}\n                            LevelOne={LevelOne}\n                            LevelTwo={LevelTwo}\n                            LevelThree={LevelThree}\n                            {...props}\n                        />\n                        ))}\n                    </div>\n                </div>\n            </div>        \n       </> \n    );\n};","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/JobCategoriesCardL2.js",["89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n\nexport const JobCatagoriesCardL2 = (props) => {\nconst levelOne = props.LevelOne\nconst levelTwo = props.LevelTwo\nlet category = props.category\n\n const makeUrlPath = () => {\n    category = category.replace(/\\s+/g, '-').toLowerCase();\n    \n}\nmakeUrlPath();\n// console.log(category)\n\n  return (\n    <>\n      <div className=\"jobviz-parent-level1\">                           \n        \n          <div type=\"button\"\n                            className=\"purple-dot-background-level1\"\n                            onClick={() => {\n                              makeUrlPath()\n                            props.history.push(`/job-catagories/${levelOne}/${levelTwo}/${category}`);\n                            // console.log(\"you clicked me\");\n                    }}></div>\n          <div className=\"listed-categories\">\n              {props.category}\n          </div>\n\n\n    </div>\n    </>\n  );\n};\n\n\n","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/JobCategoriesCardL3.js",["92","93","94"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n\nexport const JobCatagoriesCardL3 = (props) => {\nconst levelOne = props.LevelOne\nconst levelTwo = props.LevelTwo\nconst levelThree = props.LevelThree\nlet category = props.category\n\n const makeUrlPath = () => {\n    category = category.replace(/\\s+/g, '-').toLowerCase();\n    \n}\nmakeUrlPath();\nconsole.log(category)\n\n  return (\n    <>\n      <div className=\"jobviz-parent-level1\">                           \n        \n          <div type=\"button\"\n                            className=\"purple-dot-background-level1\"\n                            onClick={() => {\n                             \n                            // console.log(\"you clicked me\");\n                    }}></div>\n          <div className=\"listed-categories\">\n              {props.category}\n          </div>\n\n\n    </div>\n    </>\n  );\n};\n\n\n","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesList.js",["95","96"],"import React, { useState, useEffect } from \"react\";\nimport JobManager from \"../../modules/JobManager\"\nimport {Title} from \"../title/Title\"\nimport \"../styling/Style.css\"\nimport {JobCatagoriesCard} from \"./JobCatagoriesCard\"\n// import {PurpleDot} from \"../../images/PrupleDot\"\n\nexport const JobCatagoriesList = (props) => {\n    const [jobs, setJobs] = useState([]);\n    const [levelOne, setLevelOne] = useState([]);\n\n    const GetJobCatagories = () => {\n        return JobManager.getAll().then((jobs) => {\n            setJobs(jobs)\n        })\n    }\n    useEffect(() => {\n        GetJobCatagories()\n    }, []);\n\n    let LevelOneList = []\n    const filterJobCatLevelONe = () => jobs.map((jobCategory) => {\n        if (jobCategory.Level1 !== \"NA\" && !LevelOneList.includes(jobCategory.Level1)) {\n            LevelOneList.push(jobCategory.Level1)\n        }\n\n    })\n    filterJobCatLevelONe()  \n    const AlphaList = LevelOneList.sort()\n    // console.log(\"LevelOneList\", LevelOneList)\n\n\n\n    \nconst handleClick = (e) => {\n    e.preventDefault();\n    // console.log(e.target.id);\n    setLevelOne(e.target.id)\n     }\n    //  console.log(levelOne)\n\n    return (\n        <>\n            <div>\n                <Title />\n            </div>        \n            <div className=\"jobviz-parent\"> \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div className=\"jobs-parent\">\n                    <div className=\"container-cards\">\n                        {AlphaList.map((orderedCategory) => {\n                            return (\n                                <div className=\"yellow\" onClick={handleClick}>\n                                    <JobCatagoriesCard\n                                        \n                                        id={orderedCategory.id}\n                                        key={orderedCategory}\n                                        orderedCategory={orderedCategory}\n                                        jobs={jobs}\n                                        {...props}\n                                    />  \n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>        \n       </> \n    );\n};","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneList.js",["97","98"],"import React, { useState, useEffect } from \"react\";\nimport JobManager from \"../../modules/JobManager\"\nimport {Title} from \"../title/Title\"\nimport \"../styling/Style.css\"\nimport {LevelOneCard} from \"./LevelOneCard\"\n// import {PurpleDot} from \"../../images/PrupleDot\"\n\nexport const LevelOneList = (props) => {\n    let levelOneUrl = props.category\n\n    let levelOneString = props.category\n\n    const makeStringPath = () => {\n        levelOneString = levelOneString.replace(/-+/g, \" \")\n        levelOneString = levelOneString.charAt(0).toUpperCase() + levelOneString.slice(1)\n       \n    }\n    makeStringPath();\n    \n    // console.log(levelOneString)\n\n    const [jobs, setJobs] = useState([]);\n    \n    // let re = new RegExp('Architecture')\n    const GetJobCatagories = () => {\n        return JobManager.getAll().then((jobs) => {\n            setJobs(jobs)\n        })\n    }\n    useEffect(() => {\n        GetJobCatagories()\n    }, []);\n\n    let LevelOneList = []\n    const filterJobCatLevelONe = () => jobs.map((jobCategory) => {\n        if (jobCategory.Level1 === levelOneString && jobCategory.Level2 !== \"NA\" && !LevelOneList.includes(jobCategory.Level2)) {\n            LevelOneList.push(jobCategory.Level2)\n        }\n    \n\n    })\n\n   \n    filterJobCatLevelONe()  \n    const alphaList = LevelOneList.sort()\n    // console.log(\"LevelOneList\", LevelOneList)\n\n\n\n    return (\n        <>\n            <div>\n                <Title />\n            </div>        \n            <h1>{levelOneString}</h1>\n            <div className=\"jobviz-parent\"> \n            \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div type=\"button\"\n                        className=\"purple-dot-background\"\n                        onClick={() => {\n                        props.history.push(\"/job-catagories\");\n                        // console.log(\"you clicked me\");\n                }}></div>  \n                <div className=\"jobs-parent\">\n                    <div className=\"container-cards\">\n                        {alphaList.map((orderedCategory) => (\n                        <LevelOneCard\n                            key={orderedCategory}\n                            orderedCategory={orderedCategory}\n                            jobs={jobs}\n                            levelOneUrl={levelOneUrl}\n                            {...props}\n                        />\n                        ))}\n                    </div>\n                </div>\n            </div>        \n       </> \n    );\n\n    return (\n        <>\n\n        <div className=\"jobviz-parent\"> \n            \n            <h1>A Test to see if this component is hidden or shown</h1>\n            <h3>{levelOneString}</h3>\n        </div>\n        \n    </>\n\n\n    )\n   \n}\n\n\n","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/jobsCategories/JobCatagoriesCard.js",["99","100","101"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {makeUrlPath} from \"../Helper\"\n\n\n\nexport const JobCatagoriesCard = (props) => {\n  //String of Category\n  let categoryStr = props.orderedCategory\n\n//URL appropriate String of Category\n  let category = makeUrlPath(categoryStr);\n\n\n// const handleCLick = () => {\n//   console.log (props.category + \" was clicked\")\n// }\n\n  return (\n    <>\n      <div className=\"jobviz-parent-level1\">                           \n        \n          <div type=\"button\"\n                            className=\"purple-dot-background-level1\"\n                            onClick={() => {\n                            \n                            props.history.push(`/job-catagories/${category}`);\n                            // console.log(\"you clicked me\");\n                    }}></div>\n          <div id={categoryStr} className=\"listed-categories\">\n              {categoryStr}\n          </div>\n\n\n    </div>\n    </>\n  );\n};\n\n\n","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneCard.js",["102","103"],"import React, { useState, useEffect } from \"react\";\nimport {makeUrlPath} from \"../Helper\"\n\n\n\nexport const LevelOneCard = (props) => {\nlet levelOneUrl = props.levelOneUrl\nlet categoryStr = props.orderedCategory\nlet category = makeUrlPath(categoryStr);\n\n// console.log(category)\n\n\n\n// const handleCLick = () => {\n//   console.log (props.category + \" was clicked\")\n// }\n\n\n  return (\n    <>\n      <div className=\"jobviz-parent-level1\">                           \n        \n          <div type=\"button\"\n                            className=\"purple-dot-background-level1\"\n                            onClick={() => {\n            \n                            props.history.push(`/job-catagories/${levelOneUrl}/${category}`);\n                            // console.log(\"you clicked me\");\n                    }}></div>\n          <div id={categoryStr} className=\"listed-categories\">\n              {categoryStr}\n          </div>\n\n\n    </div>\n    </>\n  );\n};\n\n\n","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoList.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/Helper.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":1,"nodeType":"110","endLine":19,"endColumn":2},{"ruleId":"111","severity":1,"message":"112","line":23,"column":63,"nodeType":"113","messageId":"114","endLine":23,"endColumn":65},{"ruleId":"111","severity":1,"message":"112","line":24,"column":63,"nodeType":"113","messageId":"114","endLine":24,"endColumn":65},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"120","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"120","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"121","line":10,"column":12,"nodeType":"117","messageId":"118","endLine":10,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":22,"column":63,"nodeType":"113","messageId":"114","endLine":22,"endColumn":65},{"ruleId":"111","severity":1,"message":"112","line":35,"column":63,"nodeType":"113","messageId":"114","endLine":35,"endColumn":65},{"ruleId":"122","severity":1,"message":"123","line":87,"column":5,"nodeType":"124","messageId":"125","endLine":99,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"120","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'levelOne' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation"]