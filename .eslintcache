[{"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/index.js":"1","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/JobViz.js":"2","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/images/PrupleDot.js":"3","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/ApplicationViews.js":"4","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/title/Title.js":"5","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/modules/JobManager.js":"6","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/Helper.js":"7","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeList.js":"8","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeCard.js":"9","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoList.js":"10","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoCard.js":"11","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneCard.js":"12","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneList.js":"13","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/LevelFourList.js":"14","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/LevelFourCard.js":"15","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level0/Jobs.js":"16","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoEndpointList.js":"17","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeEndpointList.js":"18","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/LevelFourEndpointList.js":"19","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/table/Table.js":"20","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/search/LRautoSearchV2.js":"21"},{"size":572,"mtime":1607031059345,"results":"22","hashOfConfig":"23"},{"size":190,"mtime":1607028507207,"results":"24","hashOfConfig":"23"},{"size":660,"mtime":1606940842610,"results":"25","hashOfConfig":"23"},{"size":3082,"mtime":1607463446974,"results":"26","hashOfConfig":"23"},{"size":311,"mtime":1607193598843,"results":"27","hashOfConfig":"23"},{"size":286,"mtime":1608168066159,"results":"28","hashOfConfig":"23"},{"size":432,"mtime":1608063353390,"results":"29","hashOfConfig":"23"},{"size":6642,"mtime":1608406582821,"results":"30","hashOfConfig":"23"},{"size":2057,"mtime":1608405007757,"results":"31","hashOfConfig":"23"},{"size":5670,"mtime":1608405751033,"results":"32","hashOfConfig":"23"},{"size":1947,"mtime":1608404474112,"results":"33","hashOfConfig":"23"},{"size":1442,"mtime":1608332812183,"results":"34","hashOfConfig":"23"},{"size":4478,"mtime":1608332812184,"results":"35","hashOfConfig":"23"},{"size":7085,"mtime":1608405785235,"results":"36","hashOfConfig":"23"},{"size":961,"mtime":1608405059642,"results":"37","hashOfConfig":"23"},{"size":1566,"mtime":1608332812183,"results":"38","hashOfConfig":"23"},{"size":5876,"mtime":1608332812185,"results":"39","hashOfConfig":"23"},{"size":6802,"mtime":1608406581249,"results":"40","hashOfConfig":"23"},{"size":8240,"mtime":1608320953952,"results":"41","hashOfConfig":"23"},{"size":1774,"mtime":1607459754241,"results":"42","hashOfConfig":"23"},{"size":6657,"mtime":1608406746264,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1x6cskc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/index.js",[],["89","90"],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/JobViz.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/images/PrupleDot.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/ApplicationViews.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/title/Title.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/modules/JobManager.js",["91"],"const remoteURL = \"http://localhost:8088\";\n\nexport default {\n    getAll() {\n        return fetch(`${remoteURL}/jobs`).then((result) => result.json());\n      },\n    // getJob(param) {\n    //     return fetch(`${remoteURL}/jobs?title=${param}`).then((result) => result.json());\n    // }\n}","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/Helper.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeList.js",["92","93"],"import React, { useState, useEffect } from \"react\";\nimport JobManager from \"../../modules/JobManager\";\nimport { Title } from \"../title/Title\";\nimport \"../styling/Style.css\";\nimport { LevelThreeCard } from \"./LevelThreeCard\";\nimport { makeStringPath, removeDash } from \"../Helper\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"../table/Table\";\n// import { Autocomplete } from \"../search/OldSearch\"\n// import {LrAutoSearch} from \"../search/LRautoSearch\"\nimport { LrAutoSearchV2 } from \"../search/LRautoSearchV2\";\nimport { LevelThreeEndpointList } from \"./LevelThreeEndpointList\";\n\nexport const LevelThreeList = (props) => {\n  //Array of job objects\n  const [jobs, setJobs] = useState([]);\n  //Alphabetical list of job Names\n  const [alphaList, setAlphaList] = useState([]);\n  //where I set the id of the category that was clicked to sate\n  const [jobTitleList, setJobTitleList] = useState([]);\n  //Where I set name of job clicked to state\n  const [jobName, setJobName] = useState([]);\n  //Where the clicked job's object is made avalile\n  const [jobObj, setJobObj] = useState({\n    id: 0,\n    title: \"\",\n    Hierarchy: \"\",\n    OccupationType: \"\",\n    Employment2016: 0,\n    Employment2026: 0,\n    ChgEmploy2016to26Num: 0,\n    ChgEmploy2016to26Perc: 0,\n    PercentSelfEmployed2016: 0,\n    OccupationalOpenings2016to2026AnnualAverage: 0,\n    MedianAnnualWage2017: \"\",\n    TypicalEducationNeededForEntr: \"\",\n    WorkExperienceInARelatedOccupation: \"\",\n    TypicalOnTheJobTrainingNeededToAttainCompetencyInTheOccupation: \"\",\n    ttl: \"\",\n    Level0: \"\",\n    Level4: \"\",\n    Level3: \"\",\n    Level2: \"\",\n    Level1: \"\",\n    pathString: \"\",\n    Def: \"\",\n  });\n\n  // the level 1 category url sting we need to pass to children\n  const levelOneUrl = props.levelOneUrl;\n\n  // the level 2 category url sting we need to pass to children\n  const levelTwoUrl = props.category;\n\n  //we only select level 2 categories that have the same level 1 category\n  let levelOneString = makeStringPath(props.levelOneUrl);\n  // console.log(levelOneString)\n\n  //the level 2 category 'normal' string we need to match to make sure\n  //we only select level 3 categories that have the same level 1 category\n  let levelTwoString = makeStringPath(props.category);\n  // console.log(levelTwoString)\n\n  useEffect(() => {\n    JobManager.getAll().then((jobs) => {\n      setJobs(jobs);\n      ///set job name to category that was clicked to get to this branch\n      //so table holds that job object's info\n      setJobName(levelTwoString);\n    });\n  }, [levelTwoString]);\n\n  useEffect(() => {\n    const filterlevelThree = () => {\n      let levelList = [];\n      jobs.forEach((jobCategory) => {\n        let noDash = removeDash(jobCategory.Level2);\n        if (\n          noDash === levelTwoString &&\n          jobCategory.Level3 !== \"NA\" &&\n          !levelList.includes(jobCategory.Level3)\n        ) {\n          levelList.push(jobCategory.Level3);\n        }\n      });\n      let sortedList = levelList.sort();\n      setAlphaList(sortedList);\n    };\n\n    filterlevelThree(jobs);\n\n    const getAllJobNames = (jobs) => {\n      let jobTList = [];\n      jobs.forEach((job) => {\n        if (!jobTList.includes(job.title)) {\n          jobTList.push(job.title);\n        }\n      });\n      setJobTitleList(jobTList);\n    };\n    ////Call the Function\n    getAllJobNames(jobs);\n  }, [jobs, levelTwoString]);\n\n  useEffect(() => {\n    // console.log(alphaList, \"ordered list\");\n\n    const getClickedJobObject = () => {\n      const arrayHold = [];\n      jobs.forEach(function (job) {\n        arrayHold.push(job.ttl === jobName);\n      });\n\n      // console.log(arrayHold);\n      if (arrayHold.includes(true)) {\n        // console.log(\"Array Hold had one true value\")\n        jobs.forEach((jobObj) => {\n          if (jobName === jobObj.ttl) {\n            setJobObj(jobObj);\n          }\n        });\n      } else {\n        jobs.forEach((jobObj) => {\n          let noDashTtl = removeDash(jobObj.ttl);\n          let noDashObj = removeDash(jobObj.title);\n          if (levelTwoString === noDashTtl || levelTwoString === noDashObj) {\n            setJobObj(jobObj);\n          }\n        });\n      }\n    };\n\n    getClickedJobObject();\n  }, [jobName, levelTwoString, jobs]);\n\n  return (\n    <>\n      <div>\n        <Title />\n      </div>\n      <h1>HWEW YOu Are level 3</h1>\n      <div>\n        <LrAutoSearchV2 jobs={jobs} jobTitleList={jobTitleList} {...props} />\n      </div>\n      <div className=\"jobviz-header\">\n        <h4>{levelTwoString}</h4>\n      </div>\n      <div className=\"crumbs\">\n        <small>\n          <Link to={\"/\"}>Jobs</Link> >{\" \"}\n          <Link to={\"/job-catagories\"}>Job Categories</Link> >{\" \"}\n          <Link to={`/job-catagories/${levelOneUrl}`}>{levelOneString}</Link> >{\" \"}\n          {levelTwoString}\n        </small>\n      </div>\n\n      <div className=\"jobviz-parent\">\n        <div className=\"btn-container\">\n          <div\n            type=\"button\"\n            className=\"link-btn\"\n            onClick={() => {\n              props.history.push(\"/\");\n              // console.log(\"you clicked me\");\n            }}\n          >\n            -\n          </div>\n        </div>\n        <div className=\"btn-container\">\n          <div\n            type=\"button\"\n            className=\"link-btn\"\n            onClick={() => {\n              props.history.push(\"/job-catagories\");\n              // console.log(\"you clicked me\");\n            }}\n          >\n            -\n          </div>\n        </div>\n        <div className=\"btn-container\">\n          <div\n            type=\"button\"\n            className=\"link-btn\"\n            onClick={() => {\n              props.history.push(`/job-catagories/${levelOneUrl}`);\n              // console.log(\"you clicked me\");\n            }}\n          >\n            -\n          </div>\n        </div>\n        <div className=\"container-cards\">\n          {alphaList.map((orderedCategory, i) => {\n            {\n              /* console.log(orderedCategory, \"ORDERED\", [i]); */\n            }\n            return (\n              <div\n                key={i}\n                className=\"option\"\n                onClick={() => setJobName(orderedCategory)}\n              >\n                <LevelThreeCard\n                  key={orderedCategory}\n                  orderedCategory={orderedCategory}\n                  jobs={jobs}\n                  levelOneUrl={levelOneUrl}\n                  levelTwoUrl={levelTwoUrl}\n                  {...props}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"jobviz-parent\">\n        <Table jobObj={jobObj} {...props} />\n      </div>\n    </>\n  );\n};\n","/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeCard.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoList.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoCard.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneCard.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level1/LevelOneList.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/LevelFourList.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/LevelFourCard.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level0/Jobs.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level2/LevelTwoEndpointList.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level3/LevelThreeEndpointList.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/level4/LevelFourEndpointList.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/table/Table.js",[],"/Users/leigharobinson/workspace/TestJobViz/test-job-viz/src/components/search/LRautoSearchV2.js",["94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":1,"nodeType":"101","endLine":10,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":12,"column":10,"nodeType":"104","messageId":"105","endLine":12,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":196,"column":13,"nodeType":"108","messageId":"109","endLine":198,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":196,"column":23,"nodeType":"104","messageId":"105","endLine":196,"endColumn":32},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'LevelThreeEndpointList' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'className' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]